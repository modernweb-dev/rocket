{
  "name": "@rocket/cli",
  "version": "0.20.0",
  "publishConfig": {
    "access": "public"
  },
  "description": "Rocket CLI",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/modernweb-dev/rocket.git",
    "directory": "packages/cli"
  },
  "author": "Modern Web <hello@modern-web.dev> (https://modern-web.dev/)",
  "homepage": "https://rocket.modern-web.dev/",
  "main": "./src/index.js",
  "bin": {
    "rocket": "src/cli.js"
  },
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist-types/src/index.d.ts",
      "default": "./src/index.js"
    },
    "./test-helpers": {
      "types": "./dist-types/test-helpers/index.d.ts",
      "default": "./test-helpers/index.js"
    }
  },
  "scripts": {
    "build": "npm run rocket:build",
    "rocket:build": "node src/cli.js build -c demo",
    "rocket:start": "node src/cli.js start -c demo",
    "start": "npm run rocket:start",
    "test": "mocha --require ../../scripts/testMochaGlobalHooks.js test-node/**/*.test.{js,cjs} test-node/*.test.{js,cjs} --timeout 8000",
    "test:watch": "onchange 'src/**/*.{js,cjs}' 'test-node/**/*.{js,cjs}' -- npm test",
    "types:copy": "copyfiles \"./types/**/*.d.ts\" dist-types/",
    "xtest:watch": "mocha test/**/*.test.js --parallel --watch"
  },
  "files": [
    "dist-types",
    "src",
    "test-helpers",
    "types"
  ],
  "keywords": [
    "rocket",
    "docs",
    "ssg",
    "demo",
    "rollup"
  ],
  "dependencies": {
    "@rocket/building-rollup": "^0.4.0",
    "@rocket/engine": "^0.2.0",
    "@web/rollup-plugin-copy": "^0.3.0",
    "colorette": "^2.0.16",
    "commander": "^9.0.0",
    "fs-extra": "^9.0.1",
    "gray-matter": "^4.0.3",
    "plugins-manager": "^0.3.0",
    "puppeteer": "^13.0.0"
  },
  "devDependencies": {
    "koa-proxy": "^1.0.0-alpha.3"
  },
  "types": "./dist-types/src/index.d.ts",
  "typesVersions": {
    "*": {
      "*": [
        "./dist-types/src/index.d.ts"
      ],
      "test-helpers": [
        "./dist-types/test-helpers/index.d.ts"
      ]
    }
  }
}
